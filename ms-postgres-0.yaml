apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: e3b223d06df28d816b47ef926951586a817505d783dbfc809bf40846e7a038f8
    cni.projectcalico.org/podIP: 10.1.64.78/32
    cni.projectcalico.org/podIPs: 10.1.64.78/32
  creationTimestamp: "2024-04-03T09:07:21Z"
  generateName: ms-postgres-
  labels:
    app: ms-postgres
    apps.kubernetes.io/pod-index: "0"
    controller-revision-hash: ms-postgres-55d4bc89ff
    statefulset.kubernetes.io/pod-name: ms-postgres-0
  name: ms-postgres-0
  namespace: ortelius
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: ms-postgres
    uid: 44e17d84-10cd-4edc-8a9b-9955a8088ae8
  resourceVersion: "75194"
  uid: 597eb536-20b9-4221-853e-f6411cf6fecc
spec:
  containers:
  - env:
    - name: POSTGRES_USER
      valueFrom:
        secretKeyRef:
          key: DBUserName
          name: pgcred
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          key: DBPassword
          name: pgcred
    - name: POSTGRES_DB
      valueFrom:
        secretKeyRef:
          key: DBName
          name: pgcred
    image: "16.2-bookworm"
    imagePullPolicy: IfNotPresent
    name: ms-postgres
    ports:
    - containerPort: 5432
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/lib/postgresql/data
      name: pgdata
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s58gl
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: ms-postgres-0
  nodeName: pi03
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  subdomain: ms-postgres
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - hostPath:
      path: /pgdata
      type: DirectoryOrCreate
    name: pgdata
  - name: kube-api-access-s58gl
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-04-03T09:07:34Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-04-03T09:07:24Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-04-03T09:07:24Z"
    message: 'containers with unready status: [ms-postgres]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-04-03T09:07:24Z"
    message: 'containers with unready status: [ms-postgres]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-04-03T09:07:22Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: ':'
    imageID: ""
    lastState: {}
    name: ms-postgres
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        message: 'Failed to apply default image tag ":": couldn''t parse image name
          ":": invalid reference format'
        reason: InvalidImageName
  hostIP: 192.168.0.141
  hostIPs:
  - ip: 192.168.0.141
  phase: Pending
  podIP: 10.1.64.78
  podIPs:
  - ip: 10.1.64.78
  qosClass: BestEffort
  startTime: "2024-04-03T09:07:24Z"
